{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditApartmentComponent = class EditApartmentComponent {\n  constructor(apartmentService) {\n    this.apartmentService = apartmentService;\n    this.apartmentId = null;\n    this.apartmentUpdated = new EventEmitter();\n    this.model = {\n      Name: '',\n      Rooms: 0,\n      Price: 0,\n      Description: ''\n    };\n  }\n  ngOnChanges() {\n    if (this.apartmentId) {\n      this.apartmentService.getApartmentById(this.apartmentId).subscribe({\n        next: apartment => {\n          this.model = {\n            Name: apartment.name,\n            Rooms: apartment.rooms,\n            Price: apartment.price,\n            Description: apartment.description\n          };\n        },\n        error: error => {\n          console.log('Error fetching apartment details', error);\n        }\n      });\n    }\n  }\n  onFormSubmit() {\n    if (this.apartmentId) {\n      this.apartmentService.updateApartment(this.apartmentId, this.model).subscribe({\n        next: () => {\n          console.log('Apartment updated successfully!');\n          this.apartmentUpdated.emit();\n        },\n        error: () => {\n          console.log('Error updating apartment.');\n        }\n      });\n    }\n  }\n};\n__decorate([Input()], EditApartmentComponent.prototype, \"apartmentId\", void 0);\n__decorate([Output()], EditApartmentComponent.prototype, \"apartmentUpdated\", void 0);\nEditApartmentComponent = __decorate([Component({\n  selector: 'app-edit-apartment',\n  standalone: true,\n  imports: [],\n  templateUrl: './edit-apartment.component.html',\n  styleUrl: './edit-apartment.component.css'\n})], EditApartmentComponent);\nexport { EditApartmentComponent };","map":{"version":3,"names":["Component","EditApartmentComponent","constructor","apartmentService","apartmentId","apartmentUpdated","EventEmitter","model","Name","Rooms","Price","Description","ngOnChanges","getApartmentById","subscribe","next","apartment","name","rooms","price","description","error","console","log","onFormSubmit","updateApartment","emit","__decorate","Input","Output","selector","standalone","imports","templateUrl","styleUrl"],"sources":["D:\\WORK\\Internships\\Techstack\\Apartment_Marketplace_UI\\Apartment-Marketplace-UI\\src\\app\\features\\apartment\\edit-apartment\\edit-apartment.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-apartment',\r\n  standalone: true,\r\n  imports:[],\r\n  templateUrl: './edit-apartment.component.html',\r\n  styleUrl: './edit-apartment.component.css'\r\n})\r\nexport class EditApartmentComponent {\r\n  @Input() apartmentId: string | null = null;\r\n  @Output() apartmentUpdated = new EventEmitter<void>();\r\n\r\n  model: UpdateApartmentRequest = {\r\n    Name: '',\r\n    Rooms: 0,\r\n    Price: 0,\r\n    Description: ''\r\n  };\r\n\r\n  constructor(private apartmentService: ApartmentService) {}\r\n\r\n  ngOnChanges() {\r\n    if (this.apartmentId) {\r\n      this.apartmentService.getApartmentById(this.apartmentId).subscribe({\r\n        next: (apartment) => {\r\n          this.model = {\r\n            Name: apartment.name,\r\n            Rooms: apartment.rooms,\r\n            Price: apartment.price,\r\n            Description: apartment.description,\r\n          };\r\n        },\r\n        error: (error) => {\r\n          console.log('Error fetching apartment details', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onFormSubmit() {\r\n    if (this.apartmentId) {\r\n      this.apartmentService.updateApartment(this.apartmentId, this.model).subscribe({\r\n        next: () => {\r\n          console.log('Apartment updated successfully!');\r\n          this.apartmentUpdated.emit();\r\n        },\r\n        error: () => {\r\n          console.log('Error updating apartment.');\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAWjCC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAV3B,KAAAC,WAAW,GAAkB,IAAI;IAChC,KAAAC,gBAAgB,GAAG,IAAIC,YAAY,EAAQ;IAErD,KAAAC,KAAK,GAA2B;MAC9BC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE;KACd;EAEwD;EAEzDC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACR,WAAW,EAAE;MACpB,IAAI,CAACD,gBAAgB,CAACU,gBAAgB,CAAC,IAAI,CAACT,WAAW,CAAC,CAACU,SAAS,CAAC;QACjEC,IAAI,EAAGC,SAAS,IAAI;UAClB,IAAI,CAACT,KAAK,GAAG;YACXC,IAAI,EAAEQ,SAAS,CAACC,IAAI;YACpBR,KAAK,EAAEO,SAAS,CAACE,KAAK;YACtBR,KAAK,EAAEM,SAAS,CAACG,KAAK;YACtBR,WAAW,EAAEK,SAAS,CAACI;WACxB;QACH,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,KAAK,CAAC;QACxD;OACD,CAAC;IACJ;EACF;EAEAG,YAAYA,CAAA;IACV,IAAI,IAAI,CAACpB,WAAW,EAAE;MACpB,IAAI,CAACD,gBAAgB,CAACsB,eAAe,CAAC,IAAI,CAACrB,WAAW,EAAE,IAAI,CAACG,KAAK,CAAC,CAACO,SAAS,CAAC;QAC5EC,IAAI,EAAEA,CAAA,KAAK;UACTO,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;UAC9C,IAAI,CAAClB,gBAAgB,CAACqB,IAAI,EAAE;QAC9B,CAAC;QACDL,KAAK,EAAEA,CAAA,KAAK;UACVC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAC1C;OACD,CAAC;IACJ;EACF;CACD;AA3CUI,UAAA,EAARC,KAAK,EAAE,C,0DAAmC;AACjCD,UAAA,EAATE,MAAM,EAAE,C,+DAA6C;AAF3C5B,sBAAsB,GAAA0B,UAAA,EAPlC3B,SAAS,CAAC;EACT8B,QAAQ,EAAE,oBAAoB;EAC9BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAC,EAAE;EACVC,WAAW,EAAE,iCAAiC;EAC9CC,QAAQ,EAAE;CACX,CAAC,C,EACWjC,sBAAsB,CA4ClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}