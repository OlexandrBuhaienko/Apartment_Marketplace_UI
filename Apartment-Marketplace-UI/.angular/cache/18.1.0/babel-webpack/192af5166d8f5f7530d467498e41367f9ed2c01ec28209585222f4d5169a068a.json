{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApartmentService {\n  constructor(http) {\n    this.http = http;\n  }\n  addApartment(model) {\n    return this.http.post(`${environment.apiBaseUrl}/api/apartments`, model);\n  }\n  getAllApartments() {\n    return this.http.get(`${environment.apiBaseUrl}/api/apartments`);\n  }\n  getApartmentById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/api/apartments/${id}`);\n  }\n  updateApartment(id, updateApartmentRequest) {\n    return this.http.put(`${environment.apiBaseUrl}/api/apartments/${id}`, updateApartmentRequest);\n  }\n  deleteApartment(id) {\n    return this.http.delete(`${environment.apiBaseUrl}/api/apartments/${id}`);\n  }\n  static #_ = this.ɵfac = function ApartmentService_Factory(t) {\n    return new (t || ApartmentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApartmentService,\n    factory: ApartmentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ApartmentService","constructor","http","addApartment","model","post","apiBaseUrl","getAllApartments","get","getApartmentById","id","updateApartment","updateApartmentRequest","put","deleteApartment","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\WORK\\Internships\\Techstack\\Apartment_Marketplace_UI\\Apartment-Marketplace-UI\\src\\app\\features\\apartment\\services\\apartment.service.ts"],"sourcesContent":["import { UpdateApartmentRequest } from '../models/update-apartment-request.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Apartment } from '../models/apartment.model';\r\nimport { AddApartmentRequest } from '../models/add-apartment-request.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApartmentService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  addApartment(model:AddApartmentRequest): Observable<void>{\r\n    return this.http.post<void>(`${environment.apiBaseUrl}/api/apartments`, model);\r\n  }\r\n  getAllApartments(): Observable<Apartment[]>{\r\n    return this.http.get<Apartment[]>(`${environment.apiBaseUrl}/api/apartments`);\r\n  }\r\n  getApartmentById (id: string): Observable<Apartment>{\r\n    return this.http.get<Apartment>(`${environment.apiBaseUrl}/api/apartments/${id}`);\r\n  }\r\n  updateApartment(id: string, updateApartmentRequest: UpdateApartmentRequest): Observable<Apartment> {\r\n    return this.http.put<Apartment>(`${environment.apiBaseUrl}/api/apartments/${id}`, updateApartmentRequest);\r\n  }\r\n  deleteApartment(id: string): Observable<Apartment>{\r\n    return this.http.delete<Apartment>(`${environment.apiBaseUrl}/api/apartments/${id}`)\r\n  }\r\n}\r\n"],"mappings":"AAMA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EACvCC,YAAYA,CAACC,KAAyB;IACpC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,GAAGN,WAAW,CAACO,UAAU,iBAAiB,EAAEF,KAAK,CAAC;EAChF;EACAG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAc,GAAGT,WAAW,CAACO,UAAU,iBAAiB,CAAC;EAC/E;EACAG,gBAAgBA,CAAEC,EAAU;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAY,GAAGT,WAAW,CAACO,UAAU,mBAAmBI,EAAE,EAAE,CAAC;EACnF;EACAC,eAAeA,CAACD,EAAU,EAAEE,sBAA8C;IACxE,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAY,GAAGd,WAAW,CAACO,UAAU,mBAAmBI,EAAE,EAAE,EAAEE,sBAAsB,CAAC;EAC3G;EACAE,eAAeA,CAACJ,EAAU;IACxB,OAAO,IAAI,CAACR,IAAI,CAACa,MAAM,CAAY,GAAGhB,WAAW,CAACO,UAAU,mBAAmBI,EAAE,EAAE,CAAC;EACtF;EAAC,QAAAM,CAAA,G;qBAjBUhB,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBrB,gBAAgB;IAAAsB,OAAA,EAAhBtB,gBAAgB,CAAAuB,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}