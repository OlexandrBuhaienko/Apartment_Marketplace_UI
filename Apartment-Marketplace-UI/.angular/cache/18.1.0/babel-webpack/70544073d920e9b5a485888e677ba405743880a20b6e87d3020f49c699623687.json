{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nlet ApartmentListComponent = class ApartmentListComponent {\n  constructor(apartmentService) {\n    this.apartmentService = apartmentService;\n    this.deleteApartmentSubscription = new Subscription();\n    this.getApartmentsSubscription = new Subscription();\n    this.price = 'asc';\n  }\n  ngOnInit() {\n    this.loadApartments();\n  }\n  loadApartments() {\n    this.apartments$ = this.apartmentService.getAllApartments(this.rooms, this.price);\n    //Виводимо данні про об'єкт в консоль, щоб перевірити, чи інформація з API отримується коректно \n    this.apartments$.subscribe(apartments => {\n      if (apartments.length) {\n        console.log(apartments);\n        //console.log(JSON.stringify(apartments, null, 2)); // null, 2 для форматування\n      }\n    });\n  }\n  onFilterChange(event) {\n    this.rooms = event.target.value;\n    this.loadApartments();\n  }\n  onSortChange(event) {\n    this.price = event.target.value;\n    this.loadApartments();\n  }\n  deleteApartment(id) {\n    this.deleteApartmentSubscription = this.apartmentService.deleteApartment(id).subscribe({\n      next: response => {\n        this.loadApartments();\n        return response;\n      },\n      error: err => {\n        console.error('Error deleting apartment:', err);\n      }\n    });\n  }\n  applyFilters() {\n    this.loadApartments();\n  }\n  ngOnDestroy() {\n    this.deleteApartmentSubscription.unsubscribe();\n  }\n};\nApartmentListComponent = __decorate([Component({\n  selector: 'app-apartment-list',\n  imports: [FormsModule, CommonModule],\n  templateUrl: './apartment-list.component.html',\n  styleUrl: './apartment-list.component.css'\n})], ApartmentListComponent);\nexport { ApartmentListComponent };","map":{"version":3,"names":["Component","Subscription","FormsModule","CommonModule","ApartmentListComponent","constructor","apartmentService","deleteApartmentSubscription","getApartmentsSubscription","price","ngOnInit","loadApartments","apartments$","getAllApartments","rooms","subscribe","apartments","length","console","log","onFilterChange","event","target","value","onSortChange","deleteApartment","id","next","response","error","err","applyFilters","ngOnDestroy","unsubscribe","__decorate","selector","imports","templateUrl","styleUrl"],"sources":["D:\\WORK\\Internships\\Techstack\\Apartment_Marketplace_UI\\Apartment-Marketplace-UI\\src\\app\\features\\apartment\\apartment-list\\apartment-list.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { map, Observable, Subscription } from 'rxjs';\r\nimport { Apartment } from '../models/apartment.model';\r\nimport { ApartmentService } from '../services/apartment.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApartmentMarketplaceModule } from \"../modules/apartment-marketplace.module\";\r\nimport { AddApartmentComponent } from \"../add-apartment/add-apartment.component\";\r\n\r\n@Component({\r\n  selector: 'app-apartment-list',\r\n  imports: [FormsModule, CommonModule]\r\n  templateUrl: './apartment-list.component.html',\r\n  styleUrl: './apartment-list.component.css',\r\n})\r\nexport class ApartmentListComponent implements OnInit, OnDestroy {\r\n  apartments$?: Observable<Apartment[]>;\r\n  deleteApartmentSubscription: Subscription = new Subscription();\r\n  getApartmentsSubscription: Subscription = new Subscription();\r\n  rooms?: number;\r\n  price: string = 'asc';\r\n  \r\n  constructor(private apartmentService: ApartmentService) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.loadApartments();\r\n  }\r\n  loadApartments(): void {\r\n    this.apartments$ = this.apartmentService.getAllApartments(\r\n      this.rooms,\r\n      this.price\r\n    );\r\n\r\n    //Виводимо данні про об'єкт в консоль, щоб перевірити, чи інформація з API отримується коректно \r\n    this.apartments$.subscribe(apartments => {\r\n      if(apartments.length){\r\n        console.log(apartments);\r\n        //console.log(JSON.stringify(apartments, null, 2)); // null, 2 для форматування\r\n      }\r\n      \r\n    });\r\n}\r\n  onFilterChange(event: any): void {\r\n    this.rooms = event.target.value;\r\n    this.loadApartments();\r\n  }\r\n\r\n  onSortChange(event: any): void {\r\n    this.price = event.target.value;\r\n    this.loadApartments();\r\n  }\r\n\r\n  deleteApartment(id: string): void {\r\n    this.deleteApartmentSubscription = this.apartmentService.deleteApartment(id).subscribe({\r\n      next: (response) => {\r\n        this.loadApartments();\r\n        return response;\r\n      },\r\n      error: err => {\r\n        console.error('Error deleting apartment:', err);\r\n      }\r\n    });\r\n  }\r\n  applyFilters(): void {\r\n    this.loadApartments();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.deleteApartmentSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAA0BC,YAAY,QAAQ,MAAM;AAGpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,YAAY,QAAQ,iBAAiB;AAUvC,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAOjCC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IALpC,KAAAC,2BAA2B,GAAiB,IAAIN,YAAY,EAAE;IAC9D,KAAAO,yBAAyB,GAAiB,IAAIP,YAAY,EAAE;IAE5D,KAAAQ,KAAK,GAAW,KAAK;EAEoC;EAEzDC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EACAA,cAAcA,CAAA;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI,CAACN,gBAAgB,CAACO,gBAAgB,CACvD,IAAI,CAACC,KAAK,EACV,IAAI,CAACL,KAAK,CACX;IAED;IACA,IAAI,CAACG,WAAW,CAACG,SAAS,CAACC,UAAU,IAAG;MACtC,IAAGA,UAAU,CAACC,MAAM,EAAC;QACnBC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;QACvB;MACF;IAEF,CAAC,CAAC;EACN;EACEI,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACP,KAAK,GAAGO,KAAK,CAACC,MAAM,CAACC,KAAK;IAC/B,IAAI,CAACZ,cAAc,EAAE;EACvB;EAEAa,YAAYA,CAACH,KAAU;IACrB,IAAI,CAACZ,KAAK,GAAGY,KAAK,CAACC,MAAM,CAACC,KAAK;IAC/B,IAAI,CAACZ,cAAc,EAAE;EACvB;EAEAc,eAAeA,CAACC,EAAU;IACxB,IAAI,CAACnB,2BAA2B,GAAG,IAAI,CAACD,gBAAgB,CAACmB,eAAe,CAACC,EAAE,CAAC,CAACX,SAAS,CAAC;MACrFY,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACjB,cAAc,EAAE;QACrB,OAAOiB,QAAQ;MACjB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACW,KAAK,CAAC,2BAA2B,EAAEC,GAAG,CAAC;MACjD;KACD,CAAC;EACJ;EACAC,YAAYA,CAAA;IACV,IAAI,CAACpB,cAAc,EAAE;EACvB;EACAqB,WAAWA,CAAA;IACT,IAAI,CAACzB,2BAA2B,CAAC0B,WAAW,EAAE;EAChD;CAED;AAvDY7B,sBAAsB,GAAA8B,UAAA,EANlClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,oBAAoB;EAC9BC,OAAO,EAAE,CAAClC,WAAW,EAAEC,YAAY,CAAC;EACpCkC,WAAW,EAAE,iCAAiC;EAC9CC,QAAQ,EAAE;CACX,CAAC,C,EACWlC,sBAAsB,CAuDlC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}