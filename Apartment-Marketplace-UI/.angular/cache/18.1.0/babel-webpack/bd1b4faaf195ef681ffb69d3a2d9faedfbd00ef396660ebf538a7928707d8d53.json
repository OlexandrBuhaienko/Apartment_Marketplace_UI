{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApartmentService {\n  constructor(http) {\n    this.http = http;\n  }\n  addApartment(model) {\n    return this.http.post(`${environment.apiBaseUrl}/apartments`, model);\n  }\n  getAllApartments(rooms, price = 'asc') {\n    let params = new HttpParams();\n    if (rooms != null) {\n      params = params.append('rooms', rooms.toString());\n    } else {\n      throw new Error(\"Failed to get the model...\");\n    }\n    if (price) {\n      params = params.append('price', price);\n    }\n    return this.http.get(`${environment.apiBaseUrl}/apartments`, {\n      params\n    });\n  }\n  getApartmentById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/apartments/${id}`);\n  }\n  updateApartment(id, updateApartmentRequest) {\n    return this.http.put(`${environment.apiBaseUrl}/apartments/${id}`, updateApartmentRequest);\n  }\n  deleteApartment(id) {\n    return this.http.delete(`${environment.apiBaseUrl}/apartments/${id}`);\n  }\n  static #_ = this.ɵfac = function ApartmentService_Factory(t) {\n    return new (t || ApartmentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApartmentService,\n    factory: ApartmentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","environment","ApartmentService","constructor","http","addApartment","model","post","apiBaseUrl","getAllApartments","rooms","price","params","append","toString","Error","get","getApartmentById","id","updateApartment","updateApartmentRequest","put","deleteApartment","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\WORK\\Internships\\Techstack\\Apartment_Marketplace_UI\\Apartment-Marketplace-UI\\src\\app\\features\\apartment\\services\\apartment.service.ts"],"sourcesContent":["import { UpdateApartmentRequest } from '../models/update-apartment-request.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Apartment } from '../models/apartment.model';\r\nimport { AddApartmentRequest } from '../models/add-apartment-request.model';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApartmentService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  addApartment(model:AddApartmentRequest): Observable<void>{\r\n    return this.http.post<void>(`${environment.apiBaseUrl}/apartments`, model);\r\n  }\r\n  \r\n  getAllApartments(rooms?: number, price: string = 'asc'): Observable<Apartment[]> {\r\n    let params = new HttpParams();\r\n    \r\n    if (rooms != null) {\r\n      params = params.append('rooms', rooms.toString());\r\n    }\r\n    else {\r\n      throw new Error(\"Failed to get the model...\");\r\n      }\r\n\r\n    if (price) {\r\n      params = params.append('price', price);\r\n    }\r\n    return this.http.get<Apartment[]>(`${environment.apiBaseUrl}/apartments`, {params});\r\n  }\r\n\r\n  getApartmentById (id: string): Observable<Apartment>{\r\n    return this.http.get<Apartment>(`${environment.apiBaseUrl}/apartments/${id}`);\r\n  }\r\n  updateApartment(id: string, updateApartmentRequest: UpdateApartmentRequest): Observable<Apartment> {\r\n    return this.http.put<Apartment>(`${environment.apiBaseUrl}/apartments/${id}`, updateApartmentRequest);\r\n  }\r\n  deleteApartment(id: string): Observable<Apartment>{\r\n    return this.http.delete<Apartment>(`${environment.apiBaseUrl}/apartments/${id}`);\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAASC,WAAW,QAAQ,0CAA0C;;;AAMtE,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EACvCC,YAAYA,CAACC,KAAyB;IACpC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,GAAGN,WAAW,CAACO,UAAU,aAAa,EAAEF,KAAK,CAAC;EAC5E;EAEAG,gBAAgBA,CAACC,KAAc,EAAEC,KAAA,GAAgB,KAAK;IACpD,IAAIC,MAAM,GAAG,IAAIZ,UAAU,EAAE;IAE7B,IAAIU,KAAK,IAAI,IAAI,EAAE;MACjBE,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,OAAO,EAAEH,KAAK,CAACI,QAAQ,EAAE,CAAC;IACnD,CAAC,MACI;MACH,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC7C;IAEF,IAAIJ,KAAK,EAAE;MACTC,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,OAAO,EAAEF,KAAK,CAAC;IACxC;IACA,OAAO,IAAI,CAACP,IAAI,CAACY,GAAG,CAAc,GAAGf,WAAW,CAACO,UAAU,aAAa,EAAE;MAACI;IAAM,CAAC,CAAC;EACrF;EAEAK,gBAAgBA,CAAEC,EAAU;IAC1B,OAAO,IAAI,CAACd,IAAI,CAACY,GAAG,CAAY,GAAGf,WAAW,CAACO,UAAU,eAAeU,EAAE,EAAE,CAAC;EAC/E;EACAC,eAAeA,CAACD,EAAU,EAAEE,sBAA8C;IACxE,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAY,GAAGpB,WAAW,CAACO,UAAU,eAAeU,EAAE,EAAE,EAAEE,sBAAsB,CAAC;EACvG;EACAE,eAAeA,CAACJ,EAAU;IACxB,OAAO,IAAI,CAACd,IAAI,CAACmB,MAAM,CAAY,GAAGtB,WAAW,CAACO,UAAU,eAAeU,EAAE,EAAE,CAAC;EAClF;EAAC,QAAAM,CAAA,G;qBA/BUtB,gBAAgB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB3B,gBAAgB;IAAA4B,OAAA,EAAhB5B,gBAAgB,CAAA6B,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}