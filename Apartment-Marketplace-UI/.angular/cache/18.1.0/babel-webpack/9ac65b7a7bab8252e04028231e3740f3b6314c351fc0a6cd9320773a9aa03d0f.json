{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/apartment.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction ApartmentListComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ApartmentListComponent_li_13_Template_button_click_2_listener() {\n      const apartment_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteApartment(apartment_r2.Id));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apartment_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", apartment_r2.Rooms, \" / $\", apartment_r2.Price, \" / \", apartment_r2.Name, \" \");\n  }\n}\nfunction ApartmentListComponent_15_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No apartments available\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApartmentListComponent_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ApartmentListComponent_15_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n  }\n}\nexport class ApartmentListComponent {\n  constructor(apartmentService) {\n    this.apartmentService = apartmentService;\n    this.deleteApartmentSubscription = new Subscription();\n    this.getApartmentsSubscription = new Subscription();\n    this.price = 'asc';\n  }\n  ngOnInit() {\n    this.loadApartments();\n  }\n  loadApartments() {\n    this.apartments$ = this.apartmentService.getAllApartments(this.rooms, this.price);\n  }\n  onFilterChange(event) {\n    this.rooms = event.target.value;\n    this.loadApartments();\n  }\n  onSortChange(event) {\n    this.price = event.target.value;\n    this.loadApartments();\n  }\n  deleteApartment(id) {\n    this.deleteApartmentSubscription = this.apartmentService.deleteApartment(id).subscribe({\n      next: response => {\n        this.loadApartments();\n        return response;\n      },\n      error: err => {\n        console.error('Error deleting apartment:', err);\n      }\n    });\n  }\n  applyFilters() {\n    this.loadApartments();\n  }\n  ngOnDestroy() {\n    this.deleteApartmentSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function ApartmentListComponent_Factory(t) {\n    return new (t || ApartmentListComponent)(i0.ɵɵdirectiveInject(i1.ApartmentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ApartmentListComponent,\n    selectors: [[\"app-apartment-list\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 17,\n    vars: 8,\n    consts: [[\"noData\", \"\"], [1, \"m-3\"], [\"for\", \"rooms\"], [\"id\", \"rooms\", \"type\", \"number\", \"min\", \"0\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"ml-3\", \"mt-3\"], [\"for\", \"price\"], [\"id\", \"price\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"asc\"], [\"value\", \"desc\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function ApartmentListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"label\", 2);\n        i0.ɵɵtext(2, \"Filter by rooms:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 3);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function ApartmentListComponent_Template_input_ngModelChange_3_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.rooms, $event) || (ctx.rooms = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"input\", function ApartmentListComponent_Template_input_input_3_listener() {\n          return ctx.applyFilters();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"section\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Sort by price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 6);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function ApartmentListComponent_Template_select_ngModelChange_7_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.price, $event) || (ctx.price = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"change\", function ApartmentListComponent_Template_select_change_7_listener() {\n          return ctx.applyFilters();\n        });\n        i0.ɵɵelementStart(8, \"option\", 7);\n        i0.ɵɵtext(9, \"Price - lowest to highest\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 8);\n        i0.ɵɵtext(11, \"Price - highest to lowest\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(12, \"ul\", 1);\n        i0.ɵɵtemplate(13, ApartmentListComponent_li_13_Template, 4, 3, \"li\", 9);\n        i0.ɵɵpipe(14, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, ApartmentListComponent_15_Template, 2, 0, null, 10);\n        i0.ɵɵpipe(16, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.rooms);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.price);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 4, ctx.apartments$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(16, 6, ctx.apartments$));\n      }\n    },\n    dependencies: [FormsModule, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.MinValidator, i2.NgModel, CommonModule, i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n    styles: [\"ul[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n    padding: 0;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin: 10px 0;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    margin-left: 10px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXBhcnRtZW50L2FwYXJ0bWVudC1saXN0L2FwYXJ0bWVudC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsVUFBVTtFQUNaOztFQUVBO0lBQ0UsY0FBYztFQUNoQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQiIsInNvdXJjZXNDb250ZW50IjpbInVsIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIGxpIHtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Subscription","FormsModule","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵlistener","ApartmentListComponent_li_13_Template_button_click_2_listener","apartment_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","deleteApartment","Id","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate3","Rooms","Price","Name","ɵɵtemplate","ApartmentListComponent_15_ng_template_0_Template","ɵɵtemplateRefExtractor","ApartmentListComponent","constructor","apartmentService","deleteApartmentSubscription","getApartmentsSubscription","price","ngOnInit","loadApartments","apartments$","getAllApartments","rooms","onFilterChange","event","target","value","onSortChange","id","subscribe","next","response","error","err","console","applyFilters","ngOnDestroy","unsubscribe","_","ɵɵdirectiveInject","i1","ApartmentService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ApartmentListComponent_Template","rf","ctx","ɵɵtwoWayListener","ApartmentListComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtwoWayBindingSet","ApartmentListComponent_Template_input_input_3_listener","ApartmentListComponent_Template_select_ngModelChange_7_listener","ApartmentListComponent_Template_select_change_7_listener","ApartmentListComponent_li_13_Template","ApartmentListComponent_15_Template","ɵɵtwoWayProperty","ɵɵproperty","ɵɵpipeBind1","i2","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","MinValidator","NgModel","i3","NgForOf","NgIf","AsyncPipe","styles"],"sources":["D:\\WORK\\Internships\\Techstack\\Apartment_Marketplace_UI\\Apartment-Marketplace-UI\\src\\app\\features\\apartment\\apartment-list\\apartment-list.component.ts","D:\\WORK\\Internships\\Techstack\\Apartment_Marketplace_UI\\Apartment-Marketplace-UI\\src\\app\\features\\apartment\\apartment-list\\apartment-list.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Apartment } from '../models/apartment.model';\r\nimport { ApartmentService } from '../services/apartment.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-apartment-list',\r\n  standalone: true,\r\n  imports: [FormsModule, CommonModule],\r\n  templateUrl: './apartment-list.component.html',\r\n  styleUrl: './apartment-list.component.css',\r\n})\r\nexport class ApartmentListComponent implements OnInit, OnDestroy {\r\n  apartments$?: Observable<Apartment[]>;\r\n  deleteApartmentSubscription: Subscription = new Subscription();\r\n  getApartmentsSubscription: Subscription = new Subscription();\r\n  rooms?: number;\r\n  price: string = 'asc';\r\n  constructor(private apartmentService: ApartmentService) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.loadApartments();\r\n  }\r\n  loadApartments(): void {\r\n    this.apartments$ = this.apartmentService.getAllApartments(\r\n      this.rooms,\r\n      this.price\r\n    );\r\n  }\r\n  onFilterChange(event: any): void {\r\n    this.rooms = event.target.value;\r\n    this.loadApartments();\r\n  }\r\n\r\n  onSortChange(event: any): void {\r\n    this.price = event.target.value;\r\n    this.loadApartments();\r\n  }\r\n\r\n  deleteApartment(id: string): void {\r\n    this.deleteApartmentSubscription = this.apartmentService.deleteApartment(id).subscribe({\r\n      next: (response) => {\r\n        this.loadApartments();\r\n        return response;\r\n      },\r\n      error: err => {\r\n        console.error('Error deleting apartment:', err);\r\n      }\r\n    });\r\n  }\r\n  applyFilters(): void {\r\n    this.loadApartments();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.deleteApartmentSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"m-3\">\r\n  <label for=\"rooms\">Filter by rooms:</label>\r\n  <input id=\"rooms\" type=\"number\" [(ngModel)]=\"rooms\" min=\"0\" (input)=\"applyFilters()\">\r\n\r\n  <section class=\"ml-3 mt-3\" >\r\n    <label for=\"price\">Sort by price:</label>\r\n    <select id=\"price\" [(ngModel)]=\"price\" (change)=\"applyFilters()\">\r\n      <option value=\"asc\">Price - lowest to highest</option>\r\n      <option value=\"desc\">Price - highest to lowest</option>\r\n    </select>\r\n  \r\n  </section>\r\n\r\n</div>\r\n\r\n<ul class=\"m-3\" >\r\n  <li *ngFor=\"let apartment of apartments$ | async as apartments\">\r\n    {{apartment.Rooms}} / ${{apartment.Price}} / {{apartment.Name}}\r\n    <button class=\"btn btn-danger\" (click)=\"deleteApartment(apartment.Id)\">Delete</button>\r\n  </li>\r\n</ul>\r\n<ng-template #noData  *ngIf=\"apartments$ | async as apartments;\">\r\n  <p>No apartments available</p>\r\n</ng-template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}